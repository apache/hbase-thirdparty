diff --git a/src/main/java/com/google/protobuf/CodedInputStream.java b/src/main/java/com/google/protobuf/CodedInputStream.java
index 80fd9153c..11de874dd 100644
--- a/src/main/java/com/google/protobuf/CodedInputStream.java
+++ b/src/main/java/com/google/protobuf/CodedInputStream.java
@@ -179,11 +179,7 @@ public abstract class CodedInputStream {
   }
 
   /** Create a new CodedInputStream wrapping the given {@link ByteInput}. */
-  public static CodedInputStream newInstance(ByteInput buf, boolean bufferIsImmutable) {
-    return new ByteInputDecoder(buf, bufferIsImmutable);
-  }
-
-  public static CodedInputStream newInstance(ByteInput buf, int off, int len, boolean bufferIsImmutable) {
+  static CodedInputStream newInstance(ByteInput buf, int off, int len, boolean bufferIsImmutable) {
     return new ByteInputDecoder(buf, off, len, bufferIsImmutable);
   }
 
diff --git a/src/main/java/com/google/protobuf/UnsafeByteOperations.java b/src/main/java/com/google/protobuf/UnsafeByteOperations.java
index 15c1da969..54d2f975a 100644
--- a/src/main/java/com/google/protobuf/UnsafeByteOperations.java
+++ b/src/main/java/com/google/protobuf/UnsafeByteOperations.java
@@ -74,6 +74,17 @@ public final class UnsafeByteOperations {
     return ByteString.wrap(buffer);
   }
 
+  /**
+   * An unsafe operation that returns a {@link ByteString} that is backed by the provided buffer.
+   * @param buffer the ByteInput buffer to be wrapped
+   * @param offset the offset of the wrapped byteinput
+   * @param length the number of bytes of the byteinput
+   * @return a {@link ByteString} backed by the provided buffer
+   */
+  public static ByteString unsafeWrap(ByteInput buffer, int offset, int len) {
+    return ByteString.wrap(buffer, offset, len);
+  }
+
   /**
    * Writes the given {@link ByteString} to the provided {@link ByteOutput}. Calling this method may
    * result in multiple operations on the target {@link ByteOutput} (i.e. for roped {@link

